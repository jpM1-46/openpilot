#include "live.h"

namespace {
#define DIM 22
#define EDIM 21
#define MEDIM 21
typedef void (*Hfun)(double *, double *, double *);
const static double MAHA_THRESH_4 = 7.814727903251177;
const static double MAHA_THRESH_9 = 7.814727903251177;
const static double MAHA_THRESH_10 = 7.814727903251177;
const static double MAHA_THRESH_12 = 7.814727903251177;
const static double MAHA_THRESH_31 = 7.814727903251177;
const static double MAHA_THRESH_32 = 9.487729036781154;
const static double MAHA_THRESH_13 = 7.814727903251177;
const static double MAHA_THRESH_14 = 7.814727903251177;
const static double MAHA_THRESH_33 = 7.814727903251177;

/******************************************************************************
 *                       Code generated with sympy 1.9                        *
 *                                                                            *
 *              See http://www.sympy.org/ for more information.               *
 *                                                                            *
 *                         This file is part of 'ekf'                         *
 ******************************************************************************/
void H(double *in_vec, double *out_7296470732038239115) {
   out_7296470732038239115[0] = 0;
   out_7296470732038239115[1] = -sin(in_vec[1])*sin(in_vec[2])*in_vec[4] - sin(in_vec[1])*cos(in_vec[2])*in_vec[3] - cos(in_vec[1])*in_vec[5];
   out_7296470732038239115[2] = -sin(in_vec[2])*cos(in_vec[1])*in_vec[3] + cos(in_vec[1])*cos(in_vec[2])*in_vec[4];
   out_7296470732038239115[3] = cos(in_vec[1])*cos(in_vec[2]);
   out_7296470732038239115[4] = sin(in_vec[2])*cos(in_vec[1]);
   out_7296470732038239115[5] = -sin(in_vec[1]);
   out_7296470732038239115[6] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (-sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_7296470732038239115[7] = -sin(in_vec[0])*sin(in_vec[1])*in_vec[5] + sin(in_vec[0])*sin(in_vec[2])*cos(in_vec[1])*in_vec[4] + sin(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_7296470732038239115[8] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]))*in_vec[4];
   out_7296470732038239115[9] = sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]);
   out_7296470732038239115[10] = sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) + cos(in_vec[0])*cos(in_vec[2]);
   out_7296470732038239115[11] = sin(in_vec[0])*cos(in_vec[1]);
   out_7296470732038239115[12] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (-sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) + sin(in_vec[2])*cos(in_vec[0]))*in_vec[3] - sin(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_7296470732038239115[13] = -sin(in_vec[1])*cos(in_vec[0])*in_vec[5] + sin(in_vec[2])*cos(in_vec[0])*cos(in_vec[1])*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_7296470732038239115[14] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (sin(in_vec[0])*cos(in_vec[2]) - sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[3];
   out_7296470732038239115[15] = sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]);
   out_7296470732038239115[16] = -sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]);
   out_7296470732038239115[17] = cos(in_vec[0])*cos(in_vec[1]);
}
void err_fun(double *nom_x, double *delta_x, double *out_195928949731378623) {
   out_195928949731378623[0] = delta_x[0] + nom_x[0];
   out_195928949731378623[1] = delta_x[1] + nom_x[1];
   out_195928949731378623[2] = delta_x[2] + nom_x[2];
   out_195928949731378623[3] = -0.5*delta_x[3]*nom_x[4] - 0.5*delta_x[4]*nom_x[5] - 0.5*delta_x[5]*nom_x[6] + 1.0*nom_x[3];
   out_195928949731378623[4] = 0.5*delta_x[3]*nom_x[3] + 0.5*delta_x[4]*nom_x[6] - 0.5*delta_x[5]*nom_x[5] + 1.0*nom_x[4];
   out_195928949731378623[5] = -0.5*delta_x[3]*nom_x[6] + 0.5*delta_x[4]*nom_x[3] + 0.5*delta_x[5]*nom_x[4] + 1.0*nom_x[5];
   out_195928949731378623[6] = 0.5*delta_x[3]*nom_x[5] - 0.5*delta_x[4]*nom_x[4] + 0.5*delta_x[5]*nom_x[3] + 1.0*nom_x[6];
   out_195928949731378623[7] = delta_x[6] + nom_x[7];
   out_195928949731378623[8] = delta_x[7] + nom_x[8];
   out_195928949731378623[9] = delta_x[8] + nom_x[9];
   out_195928949731378623[10] = delta_x[9] + nom_x[10];
   out_195928949731378623[11] = delta_x[10] + nom_x[11];
   out_195928949731378623[12] = delta_x[11] + nom_x[12];
   out_195928949731378623[13] = delta_x[12] + nom_x[13];
   out_195928949731378623[14] = delta_x[13] + nom_x[14];
   out_195928949731378623[15] = delta_x[14] + nom_x[15];
   out_195928949731378623[16] = delta_x[15] + nom_x[16];
   out_195928949731378623[17] = delta_x[16] + nom_x[17];
   out_195928949731378623[18] = delta_x[17] + nom_x[18];
   out_195928949731378623[19] = delta_x[18] + nom_x[19];
   out_195928949731378623[20] = delta_x[19] + nom_x[20];
   out_195928949731378623[21] = delta_x[20] + nom_x[21];
}
void inv_err_fun(double *nom_x, double *true_x, double *out_8048527368191010135) {
   out_8048527368191010135[0] = -nom_x[0] + true_x[0];
   out_8048527368191010135[1] = -nom_x[1] + true_x[1];
   out_8048527368191010135[2] = -nom_x[2] + true_x[2];
   out_8048527368191010135[3] = 2*nom_x[3]*true_x[4] - 2*nom_x[4]*true_x[3] + 2*nom_x[5]*true_x[6] - 2*nom_x[6]*true_x[5];
   out_8048527368191010135[4] = 2*nom_x[3]*true_x[5] - 2*nom_x[4]*true_x[6] - 2*nom_x[5]*true_x[3] + 2*nom_x[6]*true_x[4];
   out_8048527368191010135[5] = 2*nom_x[3]*true_x[6] + 2*nom_x[4]*true_x[5] - 2*nom_x[5]*true_x[4] - 2*nom_x[6]*true_x[3];
   out_8048527368191010135[6] = -nom_x[7] + true_x[7];
   out_8048527368191010135[7] = -nom_x[8] + true_x[8];
   out_8048527368191010135[8] = -nom_x[9] + true_x[9];
   out_8048527368191010135[9] = -nom_x[10] + true_x[10];
   out_8048527368191010135[10] = -nom_x[11] + true_x[11];
   out_8048527368191010135[11] = -nom_x[12] + true_x[12];
   out_8048527368191010135[12] = -nom_x[13] + true_x[13];
   out_8048527368191010135[13] = -nom_x[14] + true_x[14];
   out_8048527368191010135[14] = -nom_x[15] + true_x[15];
   out_8048527368191010135[15] = -nom_x[16] + true_x[16];
   out_8048527368191010135[16] = -nom_x[17] + true_x[17];
   out_8048527368191010135[17] = -nom_x[18] + true_x[18];
   out_8048527368191010135[18] = -nom_x[19] + true_x[19];
   out_8048527368191010135[19] = -nom_x[20] + true_x[20];
   out_8048527368191010135[20] = -nom_x[21] + true_x[21];
}
void H_mod_fun(double *state, double *out_7785589846533456051) {
   out_7785589846533456051[0] = 1.0;
   out_7785589846533456051[1] = 0;
   out_7785589846533456051[2] = 0;
   out_7785589846533456051[3] = 0;
   out_7785589846533456051[4] = 0;
   out_7785589846533456051[5] = 0;
   out_7785589846533456051[6] = 0;
   out_7785589846533456051[7] = 0;
   out_7785589846533456051[8] = 0;
   out_7785589846533456051[9] = 0;
   out_7785589846533456051[10] = 0;
   out_7785589846533456051[11] = 0;
   out_7785589846533456051[12] = 0;
   out_7785589846533456051[13] = 0;
   out_7785589846533456051[14] = 0;
   out_7785589846533456051[15] = 0;
   out_7785589846533456051[16] = 0;
   out_7785589846533456051[17] = 0;
   out_7785589846533456051[18] = 0;
   out_7785589846533456051[19] = 0;
   out_7785589846533456051[20] = 0;
   out_7785589846533456051[21] = 0;
   out_7785589846533456051[22] = 1.0;
   out_7785589846533456051[23] = 0;
   out_7785589846533456051[24] = 0;
   out_7785589846533456051[25] = 0;
   out_7785589846533456051[26] = 0;
   out_7785589846533456051[27] = 0;
   out_7785589846533456051[28] = 0;
   out_7785589846533456051[29] = 0;
   out_7785589846533456051[30] = 0;
   out_7785589846533456051[31] = 0;
   out_7785589846533456051[32] = 0;
   out_7785589846533456051[33] = 0;
   out_7785589846533456051[34] = 0;
   out_7785589846533456051[35] = 0;
   out_7785589846533456051[36] = 0;
   out_7785589846533456051[37] = 0;
   out_7785589846533456051[38] = 0;
   out_7785589846533456051[39] = 0;
   out_7785589846533456051[40] = 0;
   out_7785589846533456051[41] = 0;
   out_7785589846533456051[42] = 0;
   out_7785589846533456051[43] = 0;
   out_7785589846533456051[44] = 1.0;
   out_7785589846533456051[45] = 0;
   out_7785589846533456051[46] = 0;
   out_7785589846533456051[47] = 0;
   out_7785589846533456051[48] = 0;
   out_7785589846533456051[49] = 0;
   out_7785589846533456051[50] = 0;
   out_7785589846533456051[51] = 0;
   out_7785589846533456051[52] = 0;
   out_7785589846533456051[53] = 0;
   out_7785589846533456051[54] = 0;
   out_7785589846533456051[55] = 0;
   out_7785589846533456051[56] = 0;
   out_7785589846533456051[57] = 0;
   out_7785589846533456051[58] = 0;
   out_7785589846533456051[59] = 0;
   out_7785589846533456051[60] = 0;
   out_7785589846533456051[61] = 0;
   out_7785589846533456051[62] = 0;
   out_7785589846533456051[63] = 0;
   out_7785589846533456051[64] = 0;
   out_7785589846533456051[65] = 0;
   out_7785589846533456051[66] = -0.5*state[4];
   out_7785589846533456051[67] = -0.5*state[5];
   out_7785589846533456051[68] = -0.5*state[6];
   out_7785589846533456051[69] = 0;
   out_7785589846533456051[70] = 0;
   out_7785589846533456051[71] = 0;
   out_7785589846533456051[72] = 0;
   out_7785589846533456051[73] = 0;
   out_7785589846533456051[74] = 0;
   out_7785589846533456051[75] = 0;
   out_7785589846533456051[76] = 0;
   out_7785589846533456051[77] = 0;
   out_7785589846533456051[78] = 0;
   out_7785589846533456051[79] = 0;
   out_7785589846533456051[80] = 0;
   out_7785589846533456051[81] = 0;
   out_7785589846533456051[82] = 0;
   out_7785589846533456051[83] = 0;
   out_7785589846533456051[84] = 0;
   out_7785589846533456051[85] = 0;
   out_7785589846533456051[86] = 0;
   out_7785589846533456051[87] = 0.5*state[3];
   out_7785589846533456051[88] = 0.5*state[6];
   out_7785589846533456051[89] = -0.5*state[5];
   out_7785589846533456051[90] = 0;
   out_7785589846533456051[91] = 0;
   out_7785589846533456051[92] = 0;
   out_7785589846533456051[93] = 0;
   out_7785589846533456051[94] = 0;
   out_7785589846533456051[95] = 0;
   out_7785589846533456051[96] = 0;
   out_7785589846533456051[97] = 0;
   out_7785589846533456051[98] = 0;
   out_7785589846533456051[99] = 0;
   out_7785589846533456051[100] = 0;
   out_7785589846533456051[101] = 0;
   out_7785589846533456051[102] = 0;
   out_7785589846533456051[103] = 0;
   out_7785589846533456051[104] = 0;
   out_7785589846533456051[105] = 0;
   out_7785589846533456051[106] = 0;
   out_7785589846533456051[107] = 0;
   out_7785589846533456051[108] = -0.5*state[6];
   out_7785589846533456051[109] = 0.5*state[3];
   out_7785589846533456051[110] = 0.5*state[4];
   out_7785589846533456051[111] = 0;
   out_7785589846533456051[112] = 0;
   out_7785589846533456051[113] = 0;
   out_7785589846533456051[114] = 0;
   out_7785589846533456051[115] = 0;
   out_7785589846533456051[116] = 0;
   out_7785589846533456051[117] = 0;
   out_7785589846533456051[118] = 0;
   out_7785589846533456051[119] = 0;
   out_7785589846533456051[120] = 0;
   out_7785589846533456051[121] = 0;
   out_7785589846533456051[122] = 0;
   out_7785589846533456051[123] = 0;
   out_7785589846533456051[124] = 0;
   out_7785589846533456051[125] = 0;
   out_7785589846533456051[126] = 0;
   out_7785589846533456051[127] = 0;
   out_7785589846533456051[128] = 0;
   out_7785589846533456051[129] = 0.5*state[5];
   out_7785589846533456051[130] = -0.5*state[4];
   out_7785589846533456051[131] = 0.5*state[3];
   out_7785589846533456051[132] = 0;
   out_7785589846533456051[133] = 0;
   out_7785589846533456051[134] = 0;
   out_7785589846533456051[135] = 0;
   out_7785589846533456051[136] = 0;
   out_7785589846533456051[137] = 0;
   out_7785589846533456051[138] = 0;
   out_7785589846533456051[139] = 0;
   out_7785589846533456051[140] = 0;
   out_7785589846533456051[141] = 0;
   out_7785589846533456051[142] = 0;
   out_7785589846533456051[143] = 0;
   out_7785589846533456051[144] = 0;
   out_7785589846533456051[145] = 0;
   out_7785589846533456051[146] = 0;
   out_7785589846533456051[147] = 0;
   out_7785589846533456051[148] = 0;
   out_7785589846533456051[149] = 0;
   out_7785589846533456051[150] = 0;
   out_7785589846533456051[151] = 0;
   out_7785589846533456051[152] = 0;
   out_7785589846533456051[153] = 1.0;
   out_7785589846533456051[154] = 0;
   out_7785589846533456051[155] = 0;
   out_7785589846533456051[156] = 0;
   out_7785589846533456051[157] = 0;
   out_7785589846533456051[158] = 0;
   out_7785589846533456051[159] = 0;
   out_7785589846533456051[160] = 0;
   out_7785589846533456051[161] = 0;
   out_7785589846533456051[162] = 0;
   out_7785589846533456051[163] = 0;
   out_7785589846533456051[164] = 0;
   out_7785589846533456051[165] = 0;
   out_7785589846533456051[166] = 0;
   out_7785589846533456051[167] = 0;
   out_7785589846533456051[168] = 0;
   out_7785589846533456051[169] = 0;
   out_7785589846533456051[170] = 0;
   out_7785589846533456051[171] = 0;
   out_7785589846533456051[172] = 0;
   out_7785589846533456051[173] = 0;
   out_7785589846533456051[174] = 0;
   out_7785589846533456051[175] = 1.0;
   out_7785589846533456051[176] = 0;
   out_7785589846533456051[177] = 0;
   out_7785589846533456051[178] = 0;
   out_7785589846533456051[179] = 0;
   out_7785589846533456051[180] = 0;
   out_7785589846533456051[181] = 0;
   out_7785589846533456051[182] = 0;
   out_7785589846533456051[183] = 0;
   out_7785589846533456051[184] = 0;
   out_7785589846533456051[185] = 0;
   out_7785589846533456051[186] = 0;
   out_7785589846533456051[187] = 0;
   out_7785589846533456051[188] = 0;
   out_7785589846533456051[189] = 0;
   out_7785589846533456051[190] = 0;
   out_7785589846533456051[191] = 0;
   out_7785589846533456051[192] = 0;
   out_7785589846533456051[193] = 0;
   out_7785589846533456051[194] = 0;
   out_7785589846533456051[195] = 0;
   out_7785589846533456051[196] = 0;
   out_7785589846533456051[197] = 1.0;
   out_7785589846533456051[198] = 0;
   out_7785589846533456051[199] = 0;
   out_7785589846533456051[200] = 0;
   out_7785589846533456051[201] = 0;
   out_7785589846533456051[202] = 0;
   out_7785589846533456051[203] = 0;
   out_7785589846533456051[204] = 0;
   out_7785589846533456051[205] = 0;
   out_7785589846533456051[206] = 0;
   out_7785589846533456051[207] = 0;
   out_7785589846533456051[208] = 0;
   out_7785589846533456051[209] = 0;
   out_7785589846533456051[210] = 0;
   out_7785589846533456051[211] = 0;
   out_7785589846533456051[212] = 0;
   out_7785589846533456051[213] = 0;
   out_7785589846533456051[214] = 0;
   out_7785589846533456051[215] = 0;
   out_7785589846533456051[216] = 0;
   out_7785589846533456051[217] = 0;
   out_7785589846533456051[218] = 0;
   out_7785589846533456051[219] = 1.0;
   out_7785589846533456051[220] = 0;
   out_7785589846533456051[221] = 0;
   out_7785589846533456051[222] = 0;
   out_7785589846533456051[223] = 0;
   out_7785589846533456051[224] = 0;
   out_7785589846533456051[225] = 0;
   out_7785589846533456051[226] = 0;
   out_7785589846533456051[227] = 0;
   out_7785589846533456051[228] = 0;
   out_7785589846533456051[229] = 0;
   out_7785589846533456051[230] = 0;
   out_7785589846533456051[231] = 0;
   out_7785589846533456051[232] = 0;
   out_7785589846533456051[233] = 0;
   out_7785589846533456051[234] = 0;
   out_7785589846533456051[235] = 0;
   out_7785589846533456051[236] = 0;
   out_7785589846533456051[237] = 0;
   out_7785589846533456051[238] = 0;
   out_7785589846533456051[239] = 0;
   out_7785589846533456051[240] = 0;
   out_7785589846533456051[241] = 1.0;
   out_7785589846533456051[242] = 0;
   out_7785589846533456051[243] = 0;
   out_7785589846533456051[244] = 0;
   out_7785589846533456051[245] = 0;
   out_7785589846533456051[246] = 0;
   out_7785589846533456051[247] = 0;
   out_7785589846533456051[248] = 0;
   out_7785589846533456051[249] = 0;
   out_7785589846533456051[250] = 0;
   out_7785589846533456051[251] = 0;
   out_7785589846533456051[252] = 0;
   out_7785589846533456051[253] = 0;
   out_7785589846533456051[254] = 0;
   out_7785589846533456051[255] = 0;
   out_7785589846533456051[256] = 0;
   out_7785589846533456051[257] = 0;
   out_7785589846533456051[258] = 0;
   out_7785589846533456051[259] = 0;
   out_7785589846533456051[260] = 0;
   out_7785589846533456051[261] = 0;
   out_7785589846533456051[262] = 0;
   out_7785589846533456051[263] = 1.0;
   out_7785589846533456051[264] = 0;
   out_7785589846533456051[265] = 0;
   out_7785589846533456051[266] = 0;
   out_7785589846533456051[267] = 0;
   out_7785589846533456051[268] = 0;
   out_7785589846533456051[269] = 0;
   out_7785589846533456051[270] = 0;
   out_7785589846533456051[271] = 0;
   out_7785589846533456051[272] = 0;
   out_7785589846533456051[273] = 0;
   out_7785589846533456051[274] = 0;
   out_7785589846533456051[275] = 0;
   out_7785589846533456051[276] = 0;
   out_7785589846533456051[277] = 0;
   out_7785589846533456051[278] = 0;
   out_7785589846533456051[279] = 0;
   out_7785589846533456051[280] = 0;
   out_7785589846533456051[281] = 0;
   out_7785589846533456051[282] = 0;
   out_7785589846533456051[283] = 0;
   out_7785589846533456051[284] = 0;
   out_7785589846533456051[285] = 1.0;
   out_7785589846533456051[286] = 0;
   out_7785589846533456051[287] = 0;
   out_7785589846533456051[288] = 0;
   out_7785589846533456051[289] = 0;
   out_7785589846533456051[290] = 0;
   out_7785589846533456051[291] = 0;
   out_7785589846533456051[292] = 0;
   out_7785589846533456051[293] = 0;
   out_7785589846533456051[294] = 0;
   out_7785589846533456051[295] = 0;
   out_7785589846533456051[296] = 0;
   out_7785589846533456051[297] = 0;
   out_7785589846533456051[298] = 0;
   out_7785589846533456051[299] = 0;
   out_7785589846533456051[300] = 0;
   out_7785589846533456051[301] = 0;
   out_7785589846533456051[302] = 0;
   out_7785589846533456051[303] = 0;
   out_7785589846533456051[304] = 0;
   out_7785589846533456051[305] = 0;
   out_7785589846533456051[306] = 0;
   out_7785589846533456051[307] = 1.0;
   out_7785589846533456051[308] = 0;
   out_7785589846533456051[309] = 0;
   out_7785589846533456051[310] = 0;
   out_7785589846533456051[311] = 0;
   out_7785589846533456051[312] = 0;
   out_7785589846533456051[313] = 0;
   out_7785589846533456051[314] = 0;
   out_7785589846533456051[315] = 0;
   out_7785589846533456051[316] = 0;
   out_7785589846533456051[317] = 0;
   out_7785589846533456051[318] = 0;
   out_7785589846533456051[319] = 0;
   out_7785589846533456051[320] = 0;
   out_7785589846533456051[321] = 0;
   out_7785589846533456051[322] = 0;
   out_7785589846533456051[323] = 0;
   out_7785589846533456051[324] = 0;
   out_7785589846533456051[325] = 0;
   out_7785589846533456051[326] = 0;
   out_7785589846533456051[327] = 0;
   out_7785589846533456051[328] = 0;
   out_7785589846533456051[329] = 1.0;
   out_7785589846533456051[330] = 0;
   out_7785589846533456051[331] = 0;
   out_7785589846533456051[332] = 0;
   out_7785589846533456051[333] = 0;
   out_7785589846533456051[334] = 0;
   out_7785589846533456051[335] = 0;
   out_7785589846533456051[336] = 0;
   out_7785589846533456051[337] = 0;
   out_7785589846533456051[338] = 0;
   out_7785589846533456051[339] = 0;
   out_7785589846533456051[340] = 0;
   out_7785589846533456051[341] = 0;
   out_7785589846533456051[342] = 0;
   out_7785589846533456051[343] = 0;
   out_7785589846533456051[344] = 0;
   out_7785589846533456051[345] = 0;
   out_7785589846533456051[346] = 0;
   out_7785589846533456051[347] = 0;
   out_7785589846533456051[348] = 0;
   out_7785589846533456051[349] = 0;
   out_7785589846533456051[350] = 0;
   out_7785589846533456051[351] = 1.0;
   out_7785589846533456051[352] = 0;
   out_7785589846533456051[353] = 0;
   out_7785589846533456051[354] = 0;
   out_7785589846533456051[355] = 0;
   out_7785589846533456051[356] = 0;
   out_7785589846533456051[357] = 0;
   out_7785589846533456051[358] = 0;
   out_7785589846533456051[359] = 0;
   out_7785589846533456051[360] = 0;
   out_7785589846533456051[361] = 0;
   out_7785589846533456051[362] = 0;
   out_7785589846533456051[363] = 0;
   out_7785589846533456051[364] = 0;
   out_7785589846533456051[365] = 0;
   out_7785589846533456051[366] = 0;
   out_7785589846533456051[367] = 0;
   out_7785589846533456051[368] = 0;
   out_7785589846533456051[369] = 0;
   out_7785589846533456051[370] = 0;
   out_7785589846533456051[371] = 0;
   out_7785589846533456051[372] = 0;
   out_7785589846533456051[373] = 1.0;
   out_7785589846533456051[374] = 0;
   out_7785589846533456051[375] = 0;
   out_7785589846533456051[376] = 0;
   out_7785589846533456051[377] = 0;
   out_7785589846533456051[378] = 0;
   out_7785589846533456051[379] = 0;
   out_7785589846533456051[380] = 0;
   out_7785589846533456051[381] = 0;
   out_7785589846533456051[382] = 0;
   out_7785589846533456051[383] = 0;
   out_7785589846533456051[384] = 0;
   out_7785589846533456051[385] = 0;
   out_7785589846533456051[386] = 0;
   out_7785589846533456051[387] = 0;
   out_7785589846533456051[388] = 0;
   out_7785589846533456051[389] = 0;
   out_7785589846533456051[390] = 0;
   out_7785589846533456051[391] = 0;
   out_7785589846533456051[392] = 0;
   out_7785589846533456051[393] = 0;
   out_7785589846533456051[394] = 0;
   out_7785589846533456051[395] = 1.0;
   out_7785589846533456051[396] = 0;
   out_7785589846533456051[397] = 0;
   out_7785589846533456051[398] = 0;
   out_7785589846533456051[399] = 0;
   out_7785589846533456051[400] = 0;
   out_7785589846533456051[401] = 0;
   out_7785589846533456051[402] = 0;
   out_7785589846533456051[403] = 0;
   out_7785589846533456051[404] = 0;
   out_7785589846533456051[405] = 0;
   out_7785589846533456051[406] = 0;
   out_7785589846533456051[407] = 0;
   out_7785589846533456051[408] = 0;
   out_7785589846533456051[409] = 0;
   out_7785589846533456051[410] = 0;
   out_7785589846533456051[411] = 0;
   out_7785589846533456051[412] = 0;
   out_7785589846533456051[413] = 0;
   out_7785589846533456051[414] = 0;
   out_7785589846533456051[415] = 0;
   out_7785589846533456051[416] = 0;
   out_7785589846533456051[417] = 1.0;
   out_7785589846533456051[418] = 0;
   out_7785589846533456051[419] = 0;
   out_7785589846533456051[420] = 0;
   out_7785589846533456051[421] = 0;
   out_7785589846533456051[422] = 0;
   out_7785589846533456051[423] = 0;
   out_7785589846533456051[424] = 0;
   out_7785589846533456051[425] = 0;
   out_7785589846533456051[426] = 0;
   out_7785589846533456051[427] = 0;
   out_7785589846533456051[428] = 0;
   out_7785589846533456051[429] = 0;
   out_7785589846533456051[430] = 0;
   out_7785589846533456051[431] = 0;
   out_7785589846533456051[432] = 0;
   out_7785589846533456051[433] = 0;
   out_7785589846533456051[434] = 0;
   out_7785589846533456051[435] = 0;
   out_7785589846533456051[436] = 0;
   out_7785589846533456051[437] = 0;
   out_7785589846533456051[438] = 0;
   out_7785589846533456051[439] = 1.0;
   out_7785589846533456051[440] = 0;
   out_7785589846533456051[441] = 0;
   out_7785589846533456051[442] = 0;
   out_7785589846533456051[443] = 0;
   out_7785589846533456051[444] = 0;
   out_7785589846533456051[445] = 0;
   out_7785589846533456051[446] = 0;
   out_7785589846533456051[447] = 0;
   out_7785589846533456051[448] = 0;
   out_7785589846533456051[449] = 0;
   out_7785589846533456051[450] = 0;
   out_7785589846533456051[451] = 0;
   out_7785589846533456051[452] = 0;
   out_7785589846533456051[453] = 0;
   out_7785589846533456051[454] = 0;
   out_7785589846533456051[455] = 0;
   out_7785589846533456051[456] = 0;
   out_7785589846533456051[457] = 0;
   out_7785589846533456051[458] = 0;
   out_7785589846533456051[459] = 0;
   out_7785589846533456051[460] = 0;
   out_7785589846533456051[461] = 1.0;
}
void f_fun(double *state, double dt, double *out_6180571892829147108) {
   out_6180571892829147108[0] = dt*state[7] + state[0];
   out_6180571892829147108[1] = dt*state[8] + state[1];
   out_6180571892829147108[2] = dt*state[9] + state[2];
   out_6180571892829147108[3] = dt*(-0.5*state[4]*state[10] - 0.5*state[5]*state[11] - 0.5*state[6]*state[12]) + state[3];
   out_6180571892829147108[4] = dt*(0.5*state[3]*state[10] + 0.5*state[5]*state[12] - 0.5*state[6]*state[11]) + state[4];
   out_6180571892829147108[5] = dt*(0.5*state[3]*state[11] - 0.5*state[4]*state[12] + 0.5*state[6]*state[10]) + state[5];
   out_6180571892829147108[6] = dt*(0.5*state[3]*state[12] + 0.5*state[4]*state[11] - 0.5*state[5]*state[10]) + state[6];
   out_6180571892829147108[7] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]) + state[7];
   out_6180571892829147108[8] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]) + state[8];
   out_6180571892829147108[9] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]) + state[9];
   out_6180571892829147108[10] = state[10];
   out_6180571892829147108[11] = state[11];
   out_6180571892829147108[12] = state[12];
   out_6180571892829147108[13] = state[13];
   out_6180571892829147108[14] = state[14];
   out_6180571892829147108[15] = state[15];
   out_6180571892829147108[16] = state[16];
   out_6180571892829147108[17] = state[17];
   out_6180571892829147108[18] = state[18];
   out_6180571892829147108[19] = state[19];
   out_6180571892829147108[20] = state[20];
   out_6180571892829147108[21] = state[21];
}
void F_fun(double *state, double dt, double *out_7713953993130752993) {
   out_7713953993130752993[0] = 1;
   out_7713953993130752993[1] = 0;
   out_7713953993130752993[2] = 0;
   out_7713953993130752993[3] = 0;
   out_7713953993130752993[4] = 0;
   out_7713953993130752993[5] = 0;
   out_7713953993130752993[6] = dt;
   out_7713953993130752993[7] = 0;
   out_7713953993130752993[8] = 0;
   out_7713953993130752993[9] = 0;
   out_7713953993130752993[10] = 0;
   out_7713953993130752993[11] = 0;
   out_7713953993130752993[12] = 0;
   out_7713953993130752993[13] = 0;
   out_7713953993130752993[14] = 0;
   out_7713953993130752993[15] = 0;
   out_7713953993130752993[16] = 0;
   out_7713953993130752993[17] = 0;
   out_7713953993130752993[18] = 0;
   out_7713953993130752993[19] = 0;
   out_7713953993130752993[20] = 0;
   out_7713953993130752993[21] = 0;
   out_7713953993130752993[22] = 1;
   out_7713953993130752993[23] = 0;
   out_7713953993130752993[24] = 0;
   out_7713953993130752993[25] = 0;
   out_7713953993130752993[26] = 0;
   out_7713953993130752993[27] = 0;
   out_7713953993130752993[28] = dt;
   out_7713953993130752993[29] = 0;
   out_7713953993130752993[30] = 0;
   out_7713953993130752993[31] = 0;
   out_7713953993130752993[32] = 0;
   out_7713953993130752993[33] = 0;
   out_7713953993130752993[34] = 0;
   out_7713953993130752993[35] = 0;
   out_7713953993130752993[36] = 0;
   out_7713953993130752993[37] = 0;
   out_7713953993130752993[38] = 0;
   out_7713953993130752993[39] = 0;
   out_7713953993130752993[40] = 0;
   out_7713953993130752993[41] = 0;
   out_7713953993130752993[42] = 0;
   out_7713953993130752993[43] = 0;
   out_7713953993130752993[44] = 1;
   out_7713953993130752993[45] = 0;
   out_7713953993130752993[46] = 0;
   out_7713953993130752993[47] = 0;
   out_7713953993130752993[48] = 0;
   out_7713953993130752993[49] = 0;
   out_7713953993130752993[50] = dt;
   out_7713953993130752993[51] = 0;
   out_7713953993130752993[52] = 0;
   out_7713953993130752993[53] = 0;
   out_7713953993130752993[54] = 0;
   out_7713953993130752993[55] = 0;
   out_7713953993130752993[56] = 0;
   out_7713953993130752993[57] = 0;
   out_7713953993130752993[58] = 0;
   out_7713953993130752993[59] = 0;
   out_7713953993130752993[60] = 0;
   out_7713953993130752993[61] = 0;
   out_7713953993130752993[62] = 0;
   out_7713953993130752993[63] = 0;
   out_7713953993130752993[64] = 0;
   out_7713953993130752993[65] = 0;
   out_7713953993130752993[66] = 1;
   out_7713953993130752993[67] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[11] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_7713953993130752993[68] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[12] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[10] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[11]);
   out_7713953993130752993[69] = 0;
   out_7713953993130752993[70] = 0;
   out_7713953993130752993[71] = 0;
   out_7713953993130752993[72] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_7713953993130752993[73] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_7713953993130752993[74] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_7713953993130752993[75] = 0;
   out_7713953993130752993[76] = 0;
   out_7713953993130752993[77] = 0;
   out_7713953993130752993[78] = 0;
   out_7713953993130752993[79] = 0;
   out_7713953993130752993[80] = 0;
   out_7713953993130752993[81] = 0;
   out_7713953993130752993[82] = 0;
   out_7713953993130752993[83] = 0;
   out_7713953993130752993[84] = 0;
   out_7713953993130752993[85] = 0;
   out_7713953993130752993[86] = 0;
   out_7713953993130752993[87] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[11] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_7713953993130752993[88] = 1;
   out_7713953993130752993[89] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[12] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[11] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[10]);
   out_7713953993130752993[90] = 0;
   out_7713953993130752993[91] = 0;
   out_7713953993130752993[92] = 0;
   out_7713953993130752993[93] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_7713953993130752993[94] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_7713953993130752993[95] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_7713953993130752993[96] = 0;
   out_7713953993130752993[97] = 0;
   out_7713953993130752993[98] = 0;
   out_7713953993130752993[99] = 0;
   out_7713953993130752993[100] = 0;
   out_7713953993130752993[101] = 0;
   out_7713953993130752993[102] = 0;
   out_7713953993130752993[103] = 0;
   out_7713953993130752993[104] = 0;
   out_7713953993130752993[105] = 0;
   out_7713953993130752993[106] = 0;
   out_7713953993130752993[107] = 0;
   out_7713953993130752993[108] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[12] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[10] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[11]);
   out_7713953993130752993[109] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[12] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[11] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[10]);
   out_7713953993130752993[110] = 1;
   out_7713953993130752993[111] = 0;
   out_7713953993130752993[112] = 0;
   out_7713953993130752993[113] = 0;
   out_7713953993130752993[114] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_7713953993130752993[115] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_7713953993130752993[116] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_7713953993130752993[117] = 0;
   out_7713953993130752993[118] = 0;
   out_7713953993130752993[119] = 0;
   out_7713953993130752993[120] = 0;
   out_7713953993130752993[121] = 0;
   out_7713953993130752993[122] = 0;
   out_7713953993130752993[123] = 0;
   out_7713953993130752993[124] = 0;
   out_7713953993130752993[125] = 0;
   out_7713953993130752993[126] = 0;
   out_7713953993130752993[127] = 0;
   out_7713953993130752993[128] = 0;
   out_7713953993130752993[129] = 0;
   out_7713953993130752993[130] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_7713953993130752993[131] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[18] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[16] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[17]);
   out_7713953993130752993[132] = 1;
   out_7713953993130752993[133] = 0;
   out_7713953993130752993[134] = 0;
   out_7713953993130752993[135] = 0;
   out_7713953993130752993[136] = 0;
   out_7713953993130752993[137] = 0;
   out_7713953993130752993[138] = 0;
   out_7713953993130752993[139] = 0;
   out_7713953993130752993[140] = 0;
   out_7713953993130752993[141] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_7713953993130752993[142] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_7713953993130752993[143] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_7713953993130752993[144] = 0;
   out_7713953993130752993[145] = 0;
   out_7713953993130752993[146] = 0;
   out_7713953993130752993[147] = 0;
   out_7713953993130752993[148] = 0;
   out_7713953993130752993[149] = 0;
   out_7713953993130752993[150] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[17] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_7713953993130752993[151] = 0;
   out_7713953993130752993[152] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]);
   out_7713953993130752993[153] = 0;
   out_7713953993130752993[154] = 1;
   out_7713953993130752993[155] = 0;
   out_7713953993130752993[156] = 0;
   out_7713953993130752993[157] = 0;
   out_7713953993130752993[158] = 0;
   out_7713953993130752993[159] = 0;
   out_7713953993130752993[160] = 0;
   out_7713953993130752993[161] = 0;
   out_7713953993130752993[162] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_7713953993130752993[163] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_7713953993130752993[164] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_7713953993130752993[165] = 0;
   out_7713953993130752993[166] = 0;
   out_7713953993130752993[167] = 0;
   out_7713953993130752993[168] = 0;
   out_7713953993130752993[169] = 0;
   out_7713953993130752993[170] = 0;
   out_7713953993130752993[171] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]);
   out_7713953993130752993[172] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[18] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[17] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[16]);
   out_7713953993130752993[173] = 0;
   out_7713953993130752993[174] = 0;
   out_7713953993130752993[175] = 0;
   out_7713953993130752993[176] = 1;
   out_7713953993130752993[177] = 0;
   out_7713953993130752993[178] = 0;
   out_7713953993130752993[179] = 0;
   out_7713953993130752993[180] = 0;
   out_7713953993130752993[181] = 0;
   out_7713953993130752993[182] = 0;
   out_7713953993130752993[183] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_7713953993130752993[184] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_7713953993130752993[185] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_7713953993130752993[186] = 0;
   out_7713953993130752993[187] = 0;
   out_7713953993130752993[188] = 0;
   out_7713953993130752993[189] = 0;
   out_7713953993130752993[190] = 0;
   out_7713953993130752993[191] = 0;
   out_7713953993130752993[192] = 0;
   out_7713953993130752993[193] = 0;
   out_7713953993130752993[194] = 0;
   out_7713953993130752993[195] = 0;
   out_7713953993130752993[196] = 0;
   out_7713953993130752993[197] = 0;
   out_7713953993130752993[198] = 1;
   out_7713953993130752993[199] = 0;
   out_7713953993130752993[200] = 0;
   out_7713953993130752993[201] = 0;
   out_7713953993130752993[202] = 0;
   out_7713953993130752993[203] = 0;
   out_7713953993130752993[204] = 0;
   out_7713953993130752993[205] = 0;
   out_7713953993130752993[206] = 0;
   out_7713953993130752993[207] = 0;
   out_7713953993130752993[208] = 0;
   out_7713953993130752993[209] = 0;
   out_7713953993130752993[210] = 0;
   out_7713953993130752993[211] = 0;
   out_7713953993130752993[212] = 0;
   out_7713953993130752993[213] = 0;
   out_7713953993130752993[214] = 0;
   out_7713953993130752993[215] = 0;
   out_7713953993130752993[216] = 0;
   out_7713953993130752993[217] = 0;
   out_7713953993130752993[218] = 0;
   out_7713953993130752993[219] = 0;
   out_7713953993130752993[220] = 1;
   out_7713953993130752993[221] = 0;
   out_7713953993130752993[222] = 0;
   out_7713953993130752993[223] = 0;
   out_7713953993130752993[224] = 0;
   out_7713953993130752993[225] = 0;
   out_7713953993130752993[226] = 0;
   out_7713953993130752993[227] = 0;
   out_7713953993130752993[228] = 0;
   out_7713953993130752993[229] = 0;
   out_7713953993130752993[230] = 0;
   out_7713953993130752993[231] = 0;
   out_7713953993130752993[232] = 0;
   out_7713953993130752993[233] = 0;
   out_7713953993130752993[234] = 0;
   out_7713953993130752993[235] = 0;
   out_7713953993130752993[236] = 0;
   out_7713953993130752993[237] = 0;
   out_7713953993130752993[238] = 0;
   out_7713953993130752993[239] = 0;
   out_7713953993130752993[240] = 0;
   out_7713953993130752993[241] = 0;
   out_7713953993130752993[242] = 1;
   out_7713953993130752993[243] = 0;
   out_7713953993130752993[244] = 0;
   out_7713953993130752993[245] = 0;
   out_7713953993130752993[246] = 0;
   out_7713953993130752993[247] = 0;
   out_7713953993130752993[248] = 0;
   out_7713953993130752993[249] = 0;
   out_7713953993130752993[250] = 0;
   out_7713953993130752993[251] = 0;
   out_7713953993130752993[252] = 0;
   out_7713953993130752993[253] = 0;
   out_7713953993130752993[254] = 0;
   out_7713953993130752993[255] = 0;
   out_7713953993130752993[256] = 0;
   out_7713953993130752993[257] = 0;
   out_7713953993130752993[258] = 0;
   out_7713953993130752993[259] = 0;
   out_7713953993130752993[260] = 0;
   out_7713953993130752993[261] = 0;
   out_7713953993130752993[262] = 0;
   out_7713953993130752993[263] = 0;
   out_7713953993130752993[264] = 1;
   out_7713953993130752993[265] = 0;
   out_7713953993130752993[266] = 0;
   out_7713953993130752993[267] = 0;
   out_7713953993130752993[268] = 0;
   out_7713953993130752993[269] = 0;
   out_7713953993130752993[270] = 0;
   out_7713953993130752993[271] = 0;
   out_7713953993130752993[272] = 0;
   out_7713953993130752993[273] = 0;
   out_7713953993130752993[274] = 0;
   out_7713953993130752993[275] = 0;
   out_7713953993130752993[276] = 0;
   out_7713953993130752993[277] = 0;
   out_7713953993130752993[278] = 0;
   out_7713953993130752993[279] = 0;
   out_7713953993130752993[280] = 0;
   out_7713953993130752993[281] = 0;
   out_7713953993130752993[282] = 0;
   out_7713953993130752993[283] = 0;
   out_7713953993130752993[284] = 0;
   out_7713953993130752993[285] = 0;
   out_7713953993130752993[286] = 1;
   out_7713953993130752993[287] = 0;
   out_7713953993130752993[288] = 0;
   out_7713953993130752993[289] = 0;
   out_7713953993130752993[290] = 0;
   out_7713953993130752993[291] = 0;
   out_7713953993130752993[292] = 0;
   out_7713953993130752993[293] = 0;
   out_7713953993130752993[294] = 0;
   out_7713953993130752993[295] = 0;
   out_7713953993130752993[296] = 0;
   out_7713953993130752993[297] = 0;
   out_7713953993130752993[298] = 0;
   out_7713953993130752993[299] = 0;
   out_7713953993130752993[300] = 0;
   out_7713953993130752993[301] = 0;
   out_7713953993130752993[302] = 0;
   out_7713953993130752993[303] = 0;
   out_7713953993130752993[304] = 0;
   out_7713953993130752993[305] = 0;
   out_7713953993130752993[306] = 0;
   out_7713953993130752993[307] = 0;
   out_7713953993130752993[308] = 1;
   out_7713953993130752993[309] = 0;
   out_7713953993130752993[310] = 0;
   out_7713953993130752993[311] = 0;
   out_7713953993130752993[312] = 0;
   out_7713953993130752993[313] = 0;
   out_7713953993130752993[314] = 0;
   out_7713953993130752993[315] = 0;
   out_7713953993130752993[316] = 0;
   out_7713953993130752993[317] = 0;
   out_7713953993130752993[318] = 0;
   out_7713953993130752993[319] = 0;
   out_7713953993130752993[320] = 0;
   out_7713953993130752993[321] = 0;
   out_7713953993130752993[322] = 0;
   out_7713953993130752993[323] = 0;
   out_7713953993130752993[324] = 0;
   out_7713953993130752993[325] = 0;
   out_7713953993130752993[326] = 0;
   out_7713953993130752993[327] = 0;
   out_7713953993130752993[328] = 0;
   out_7713953993130752993[329] = 0;
   out_7713953993130752993[330] = 1;
   out_7713953993130752993[331] = 0;
   out_7713953993130752993[332] = 0;
   out_7713953993130752993[333] = 0;
   out_7713953993130752993[334] = 0;
   out_7713953993130752993[335] = 0;
   out_7713953993130752993[336] = 0;
   out_7713953993130752993[337] = 0;
   out_7713953993130752993[338] = 0;
   out_7713953993130752993[339] = 0;
   out_7713953993130752993[340] = 0;
   out_7713953993130752993[341] = 0;
   out_7713953993130752993[342] = 0;
   out_7713953993130752993[343] = 0;
   out_7713953993130752993[344] = 0;
   out_7713953993130752993[345] = 0;
   out_7713953993130752993[346] = 0;
   out_7713953993130752993[347] = 0;
   out_7713953993130752993[348] = 0;
   out_7713953993130752993[349] = 0;
   out_7713953993130752993[350] = 0;
   out_7713953993130752993[351] = 0;
   out_7713953993130752993[352] = 1;
   out_7713953993130752993[353] = 0;
   out_7713953993130752993[354] = 0;
   out_7713953993130752993[355] = 0;
   out_7713953993130752993[356] = 0;
   out_7713953993130752993[357] = 0;
   out_7713953993130752993[358] = 0;
   out_7713953993130752993[359] = 0;
   out_7713953993130752993[360] = 0;
   out_7713953993130752993[361] = 0;
   out_7713953993130752993[362] = 0;
   out_7713953993130752993[363] = 0;
   out_7713953993130752993[364] = 0;
   out_7713953993130752993[365] = 0;
   out_7713953993130752993[366] = 0;
   out_7713953993130752993[367] = 0;
   out_7713953993130752993[368] = 0;
   out_7713953993130752993[369] = 0;
   out_7713953993130752993[370] = 0;
   out_7713953993130752993[371] = 0;
   out_7713953993130752993[372] = 0;
   out_7713953993130752993[373] = 0;
   out_7713953993130752993[374] = 1;
   out_7713953993130752993[375] = 0;
   out_7713953993130752993[376] = 0;
   out_7713953993130752993[377] = 0;
   out_7713953993130752993[378] = 0;
   out_7713953993130752993[379] = 0;
   out_7713953993130752993[380] = 0;
   out_7713953993130752993[381] = 0;
   out_7713953993130752993[382] = 0;
   out_7713953993130752993[383] = 0;
   out_7713953993130752993[384] = 0;
   out_7713953993130752993[385] = 0;
   out_7713953993130752993[386] = 0;
   out_7713953993130752993[387] = 0;
   out_7713953993130752993[388] = 0;
   out_7713953993130752993[389] = 0;
   out_7713953993130752993[390] = 0;
   out_7713953993130752993[391] = 0;
   out_7713953993130752993[392] = 0;
   out_7713953993130752993[393] = 0;
   out_7713953993130752993[394] = 0;
   out_7713953993130752993[395] = 0;
   out_7713953993130752993[396] = 1;
   out_7713953993130752993[397] = 0;
   out_7713953993130752993[398] = 0;
   out_7713953993130752993[399] = 0;
   out_7713953993130752993[400] = 0;
   out_7713953993130752993[401] = 0;
   out_7713953993130752993[402] = 0;
   out_7713953993130752993[403] = 0;
   out_7713953993130752993[404] = 0;
   out_7713953993130752993[405] = 0;
   out_7713953993130752993[406] = 0;
   out_7713953993130752993[407] = 0;
   out_7713953993130752993[408] = 0;
   out_7713953993130752993[409] = 0;
   out_7713953993130752993[410] = 0;
   out_7713953993130752993[411] = 0;
   out_7713953993130752993[412] = 0;
   out_7713953993130752993[413] = 0;
   out_7713953993130752993[414] = 0;
   out_7713953993130752993[415] = 0;
   out_7713953993130752993[416] = 0;
   out_7713953993130752993[417] = 0;
   out_7713953993130752993[418] = 1;
   out_7713953993130752993[419] = 0;
   out_7713953993130752993[420] = 0;
   out_7713953993130752993[421] = 0;
   out_7713953993130752993[422] = 0;
   out_7713953993130752993[423] = 0;
   out_7713953993130752993[424] = 0;
   out_7713953993130752993[425] = 0;
   out_7713953993130752993[426] = 0;
   out_7713953993130752993[427] = 0;
   out_7713953993130752993[428] = 0;
   out_7713953993130752993[429] = 0;
   out_7713953993130752993[430] = 0;
   out_7713953993130752993[431] = 0;
   out_7713953993130752993[432] = 0;
   out_7713953993130752993[433] = 0;
   out_7713953993130752993[434] = 0;
   out_7713953993130752993[435] = 0;
   out_7713953993130752993[436] = 0;
   out_7713953993130752993[437] = 0;
   out_7713953993130752993[438] = 0;
   out_7713953993130752993[439] = 0;
   out_7713953993130752993[440] = 1;
}
void h_4(double *state, double *unused, double *out_9147143317146732236) {
   out_9147143317146732236[0] = state[10] + state[13];
   out_9147143317146732236[1] = state[11] + state[14];
   out_9147143317146732236[2] = state[12] + state[15];
}
void H_4(double *state, double *unused, double *out_5140815643046409326) {
   out_5140815643046409326[0] = 0;
   out_5140815643046409326[1] = 0;
   out_5140815643046409326[2] = 0;
   out_5140815643046409326[3] = 0;
   out_5140815643046409326[4] = 0;
   out_5140815643046409326[5] = 0;
   out_5140815643046409326[6] = 0;
   out_5140815643046409326[7] = 0;
   out_5140815643046409326[8] = 0;
   out_5140815643046409326[9] = 0;
   out_5140815643046409326[10] = 1;
   out_5140815643046409326[11] = 0;
   out_5140815643046409326[12] = 0;
   out_5140815643046409326[13] = 1;
   out_5140815643046409326[14] = 0;
   out_5140815643046409326[15] = 0;
   out_5140815643046409326[16] = 0;
   out_5140815643046409326[17] = 0;
   out_5140815643046409326[18] = 0;
   out_5140815643046409326[19] = 0;
   out_5140815643046409326[20] = 0;
   out_5140815643046409326[21] = 0;
   out_5140815643046409326[22] = 0;
   out_5140815643046409326[23] = 0;
   out_5140815643046409326[24] = 0;
   out_5140815643046409326[25] = 0;
   out_5140815643046409326[26] = 0;
   out_5140815643046409326[27] = 0;
   out_5140815643046409326[28] = 0;
   out_5140815643046409326[29] = 0;
   out_5140815643046409326[30] = 0;
   out_5140815643046409326[31] = 0;
   out_5140815643046409326[32] = 0;
   out_5140815643046409326[33] = 1;
   out_5140815643046409326[34] = 0;
   out_5140815643046409326[35] = 0;
   out_5140815643046409326[36] = 1;
   out_5140815643046409326[37] = 0;
   out_5140815643046409326[38] = 0;
   out_5140815643046409326[39] = 0;
   out_5140815643046409326[40] = 0;
   out_5140815643046409326[41] = 0;
   out_5140815643046409326[42] = 0;
   out_5140815643046409326[43] = 0;
   out_5140815643046409326[44] = 0;
   out_5140815643046409326[45] = 0;
   out_5140815643046409326[46] = 0;
   out_5140815643046409326[47] = 0;
   out_5140815643046409326[48] = 0;
   out_5140815643046409326[49] = 0;
   out_5140815643046409326[50] = 0;
   out_5140815643046409326[51] = 0;
   out_5140815643046409326[52] = 0;
   out_5140815643046409326[53] = 0;
   out_5140815643046409326[54] = 0;
   out_5140815643046409326[55] = 0;
   out_5140815643046409326[56] = 1;
   out_5140815643046409326[57] = 0;
   out_5140815643046409326[58] = 0;
   out_5140815643046409326[59] = 1;
   out_5140815643046409326[60] = 0;
   out_5140815643046409326[61] = 0;
   out_5140815643046409326[62] = 0;
   out_5140815643046409326[63] = 0;
   out_5140815643046409326[64] = 0;
   out_5140815643046409326[65] = 0;
}
void h_9(double *state, double *unused, double *out_3325647758290317255) {
   out_3325647758290317255[0] = state[10];
   out_3325647758290317255[1] = state[11];
   out_3325647758290317255[2] = state[12];
}
void H_9(double *state, double *unused, double *out_9148760694308364807) {
   out_9148760694308364807[0] = 0;
   out_9148760694308364807[1] = 0;
   out_9148760694308364807[2] = 0;
   out_9148760694308364807[3] = 0;
   out_9148760694308364807[4] = 0;
   out_9148760694308364807[5] = 0;
   out_9148760694308364807[6] = 0;
   out_9148760694308364807[7] = 0;
   out_9148760694308364807[8] = 0;
   out_9148760694308364807[9] = 0;
   out_9148760694308364807[10] = 1;
   out_9148760694308364807[11] = 0;
   out_9148760694308364807[12] = 0;
   out_9148760694308364807[13] = 0;
   out_9148760694308364807[14] = 0;
   out_9148760694308364807[15] = 0;
   out_9148760694308364807[16] = 0;
   out_9148760694308364807[17] = 0;
   out_9148760694308364807[18] = 0;
   out_9148760694308364807[19] = 0;
   out_9148760694308364807[20] = 0;
   out_9148760694308364807[21] = 0;
   out_9148760694308364807[22] = 0;
   out_9148760694308364807[23] = 0;
   out_9148760694308364807[24] = 0;
   out_9148760694308364807[25] = 0;
   out_9148760694308364807[26] = 0;
   out_9148760694308364807[27] = 0;
   out_9148760694308364807[28] = 0;
   out_9148760694308364807[29] = 0;
   out_9148760694308364807[30] = 0;
   out_9148760694308364807[31] = 0;
   out_9148760694308364807[32] = 0;
   out_9148760694308364807[33] = 1;
   out_9148760694308364807[34] = 0;
   out_9148760694308364807[35] = 0;
   out_9148760694308364807[36] = 0;
   out_9148760694308364807[37] = 0;
   out_9148760694308364807[38] = 0;
   out_9148760694308364807[39] = 0;
   out_9148760694308364807[40] = 0;
   out_9148760694308364807[41] = 0;
   out_9148760694308364807[42] = 0;
   out_9148760694308364807[43] = 0;
   out_9148760694308364807[44] = 0;
   out_9148760694308364807[45] = 0;
   out_9148760694308364807[46] = 0;
   out_9148760694308364807[47] = 0;
   out_9148760694308364807[48] = 0;
   out_9148760694308364807[49] = 0;
   out_9148760694308364807[50] = 0;
   out_9148760694308364807[51] = 0;
   out_9148760694308364807[52] = 0;
   out_9148760694308364807[53] = 0;
   out_9148760694308364807[54] = 0;
   out_9148760694308364807[55] = 0;
   out_9148760694308364807[56] = 1;
   out_9148760694308364807[57] = 0;
   out_9148760694308364807[58] = 0;
   out_9148760694308364807[59] = 0;
   out_9148760694308364807[60] = 0;
   out_9148760694308364807[61] = 0;
   out_9148760694308364807[62] = 0;
   out_9148760694308364807[63] = 0;
   out_9148760694308364807[64] = 0;
   out_9148760694308364807[65] = 0;
}
void h_10(double *state, double *unused, double *out_7331233491917205272) {
   out_7331233491917205272[0] = 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0] + state[16] + state[19];
   out_7331233491917205272[1] = 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1] + state[17] + state[20];
   out_7331233491917205272[2] = 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[2] + state[18] + state[21];
}
void H_10(double *state, double *unused, double *out_451170121987628608) {
   out_451170121987628608[0] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*pow(state[0], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_451170121987628608[1] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_451170121987628608[2] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[2];
   out_451170121987628608[3] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_451170121987628608[4] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_451170121987628608[5] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_451170121987628608[6] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_451170121987628608[7] = 0;
   out_451170121987628608[8] = 0;
   out_451170121987628608[9] = 0;
   out_451170121987628608[10] = 0;
   out_451170121987628608[11] = 0;
   out_451170121987628608[12] = 0;
   out_451170121987628608[13] = 0;
   out_451170121987628608[14] = 0;
   out_451170121987628608[15] = 0;
   out_451170121987628608[16] = 1;
   out_451170121987628608[17] = 0;
   out_451170121987628608[18] = 0;
   out_451170121987628608[19] = 1;
   out_451170121987628608[20] = 0;
   out_451170121987628608[21] = 0;
   out_451170121987628608[22] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_451170121987628608[23] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*pow(state[1], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_451170121987628608[24] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1]*state[2];
   out_451170121987628608[25] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_451170121987628608[26] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_451170121987628608[27] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_451170121987628608[28] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_451170121987628608[29] = 0;
   out_451170121987628608[30] = 0;
   out_451170121987628608[31] = 0;
   out_451170121987628608[32] = 0;
   out_451170121987628608[33] = 0;
   out_451170121987628608[34] = 0;
   out_451170121987628608[35] = 0;
   out_451170121987628608[36] = 0;
   out_451170121987628608[37] = 0;
   out_451170121987628608[38] = 0;
   out_451170121987628608[39] = 1;
   out_451170121987628608[40] = 0;
   out_451170121987628608[41] = 0;
   out_451170121987628608[42] = 1;
   out_451170121987628608[43] = 0;
   out_451170121987628608[44] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[0]*state[2];
   out_451170121987628608[45] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[1]*state[2];
   out_451170121987628608[46] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*pow(state[2], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_451170121987628608[47] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_451170121987628608[48] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_451170121987628608[49] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_451170121987628608[50] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_451170121987628608[51] = 0;
   out_451170121987628608[52] = 0;
   out_451170121987628608[53] = 0;
   out_451170121987628608[54] = 0;
   out_451170121987628608[55] = 0;
   out_451170121987628608[56] = 0;
   out_451170121987628608[57] = 0;
   out_451170121987628608[58] = 0;
   out_451170121987628608[59] = 0;
   out_451170121987628608[60] = 0;
   out_451170121987628608[61] = 0;
   out_451170121987628608[62] = 1;
   out_451170121987628608[63] = 0;
   out_451170121987628608[64] = 0;
   out_451170121987628608[65] = 1;
}
void h_12(double *state, double *unused, double *out_3549419012567469284) {
   out_3549419012567469284[0] = state[0];
   out_3549419012567469284[1] = state[1];
   out_3549419012567469284[2] = state[2];
}
void H_12(double *state, double *unused, double *out_4519716617998815659) {
   out_4519716617998815659[0] = 1;
   out_4519716617998815659[1] = 0;
   out_4519716617998815659[2] = 0;
   out_4519716617998815659[3] = 0;
   out_4519716617998815659[4] = 0;
   out_4519716617998815659[5] = 0;
   out_4519716617998815659[6] = 0;
   out_4519716617998815659[7] = 0;
   out_4519716617998815659[8] = 0;
   out_4519716617998815659[9] = 0;
   out_4519716617998815659[10] = 0;
   out_4519716617998815659[11] = 0;
   out_4519716617998815659[12] = 0;
   out_4519716617998815659[13] = 0;
   out_4519716617998815659[14] = 0;
   out_4519716617998815659[15] = 0;
   out_4519716617998815659[16] = 0;
   out_4519716617998815659[17] = 0;
   out_4519716617998815659[18] = 0;
   out_4519716617998815659[19] = 0;
   out_4519716617998815659[20] = 0;
   out_4519716617998815659[21] = 0;
   out_4519716617998815659[22] = 0;
   out_4519716617998815659[23] = 1;
   out_4519716617998815659[24] = 0;
   out_4519716617998815659[25] = 0;
   out_4519716617998815659[26] = 0;
   out_4519716617998815659[27] = 0;
   out_4519716617998815659[28] = 0;
   out_4519716617998815659[29] = 0;
   out_4519716617998815659[30] = 0;
   out_4519716617998815659[31] = 0;
   out_4519716617998815659[32] = 0;
   out_4519716617998815659[33] = 0;
   out_4519716617998815659[34] = 0;
   out_4519716617998815659[35] = 0;
   out_4519716617998815659[36] = 0;
   out_4519716617998815659[37] = 0;
   out_4519716617998815659[38] = 0;
   out_4519716617998815659[39] = 0;
   out_4519716617998815659[40] = 0;
   out_4519716617998815659[41] = 0;
   out_4519716617998815659[42] = 0;
   out_4519716617998815659[43] = 0;
   out_4519716617998815659[44] = 0;
   out_4519716617998815659[45] = 0;
   out_4519716617998815659[46] = 1;
   out_4519716617998815659[47] = 0;
   out_4519716617998815659[48] = 0;
   out_4519716617998815659[49] = 0;
   out_4519716617998815659[50] = 0;
   out_4519716617998815659[51] = 0;
   out_4519716617998815659[52] = 0;
   out_4519716617998815659[53] = 0;
   out_4519716617998815659[54] = 0;
   out_4519716617998815659[55] = 0;
   out_4519716617998815659[56] = 0;
   out_4519716617998815659[57] = 0;
   out_4519716617998815659[58] = 0;
   out_4519716617998815659[59] = 0;
   out_4519716617998815659[60] = 0;
   out_4519716617998815659[61] = 0;
   out_4519716617998815659[62] = 0;
   out_4519716617998815659[63] = 0;
   out_4519716617998815659[64] = 0;
   out_4519716617998815659[65] = 0;
}
void h_31(double *state, double *unused, double *out_7170478479227021472) {
   out_7170478479227021472[0] = state[7];
   out_7170478479227021472[1] = state[8];
   out_7170478479227021472[2] = state[9];
}
void H_31(double *state, double *unused, double *out_1774153585673801950) {
   out_1774153585673801950[0] = 0;
   out_1774153585673801950[1] = 0;
   out_1774153585673801950[2] = 0;
   out_1774153585673801950[3] = 0;
   out_1774153585673801950[4] = 0;
   out_1774153585673801950[5] = 0;
   out_1774153585673801950[6] = 0;
   out_1774153585673801950[7] = 1;
   out_1774153585673801950[8] = 0;
   out_1774153585673801950[9] = 0;
   out_1774153585673801950[10] = 0;
   out_1774153585673801950[11] = 0;
   out_1774153585673801950[12] = 0;
   out_1774153585673801950[13] = 0;
   out_1774153585673801950[14] = 0;
   out_1774153585673801950[15] = 0;
   out_1774153585673801950[16] = 0;
   out_1774153585673801950[17] = 0;
   out_1774153585673801950[18] = 0;
   out_1774153585673801950[19] = 0;
   out_1774153585673801950[20] = 0;
   out_1774153585673801950[21] = 0;
   out_1774153585673801950[22] = 0;
   out_1774153585673801950[23] = 0;
   out_1774153585673801950[24] = 0;
   out_1774153585673801950[25] = 0;
   out_1774153585673801950[26] = 0;
   out_1774153585673801950[27] = 0;
   out_1774153585673801950[28] = 0;
   out_1774153585673801950[29] = 0;
   out_1774153585673801950[30] = 1;
   out_1774153585673801950[31] = 0;
   out_1774153585673801950[32] = 0;
   out_1774153585673801950[33] = 0;
   out_1774153585673801950[34] = 0;
   out_1774153585673801950[35] = 0;
   out_1774153585673801950[36] = 0;
   out_1774153585673801950[37] = 0;
   out_1774153585673801950[38] = 0;
   out_1774153585673801950[39] = 0;
   out_1774153585673801950[40] = 0;
   out_1774153585673801950[41] = 0;
   out_1774153585673801950[42] = 0;
   out_1774153585673801950[43] = 0;
   out_1774153585673801950[44] = 0;
   out_1774153585673801950[45] = 0;
   out_1774153585673801950[46] = 0;
   out_1774153585673801950[47] = 0;
   out_1774153585673801950[48] = 0;
   out_1774153585673801950[49] = 0;
   out_1774153585673801950[50] = 0;
   out_1774153585673801950[51] = 0;
   out_1774153585673801950[52] = 0;
   out_1774153585673801950[53] = 1;
   out_1774153585673801950[54] = 0;
   out_1774153585673801950[55] = 0;
   out_1774153585673801950[56] = 0;
   out_1774153585673801950[57] = 0;
   out_1774153585673801950[58] = 0;
   out_1774153585673801950[59] = 0;
   out_1774153585673801950[60] = 0;
   out_1774153585673801950[61] = 0;
   out_1774153585673801950[62] = 0;
   out_1774153585673801950[63] = 0;
   out_1774153585673801950[64] = 0;
   out_1774153585673801950[65] = 0;
}
void h_32(double *state, double *unused, double *out_2516646216923074189) {
   out_2516646216923074189[0] = state[3];
   out_2516646216923074189[1] = state[4];
   out_2516646216923074189[2] = state[5];
   out_2516646216923074189[3] = state[6];
}
void H_32(double *state, double *unused, double *out_8689018089367918306) {
   out_8689018089367918306[0] = 0;
   out_8689018089367918306[1] = 0;
   out_8689018089367918306[2] = 0;
   out_8689018089367918306[3] = 1;
   out_8689018089367918306[4] = 0;
   out_8689018089367918306[5] = 0;
   out_8689018089367918306[6] = 0;
   out_8689018089367918306[7] = 0;
   out_8689018089367918306[8] = 0;
   out_8689018089367918306[9] = 0;
   out_8689018089367918306[10] = 0;
   out_8689018089367918306[11] = 0;
   out_8689018089367918306[12] = 0;
   out_8689018089367918306[13] = 0;
   out_8689018089367918306[14] = 0;
   out_8689018089367918306[15] = 0;
   out_8689018089367918306[16] = 0;
   out_8689018089367918306[17] = 0;
   out_8689018089367918306[18] = 0;
   out_8689018089367918306[19] = 0;
   out_8689018089367918306[20] = 0;
   out_8689018089367918306[21] = 0;
   out_8689018089367918306[22] = 0;
   out_8689018089367918306[23] = 0;
   out_8689018089367918306[24] = 0;
   out_8689018089367918306[25] = 0;
   out_8689018089367918306[26] = 1;
   out_8689018089367918306[27] = 0;
   out_8689018089367918306[28] = 0;
   out_8689018089367918306[29] = 0;
   out_8689018089367918306[30] = 0;
   out_8689018089367918306[31] = 0;
   out_8689018089367918306[32] = 0;
   out_8689018089367918306[33] = 0;
   out_8689018089367918306[34] = 0;
   out_8689018089367918306[35] = 0;
   out_8689018089367918306[36] = 0;
   out_8689018089367918306[37] = 0;
   out_8689018089367918306[38] = 0;
   out_8689018089367918306[39] = 0;
   out_8689018089367918306[40] = 0;
   out_8689018089367918306[41] = 0;
   out_8689018089367918306[42] = 0;
   out_8689018089367918306[43] = 0;
   out_8689018089367918306[44] = 0;
   out_8689018089367918306[45] = 0;
   out_8689018089367918306[46] = 0;
   out_8689018089367918306[47] = 0;
   out_8689018089367918306[48] = 0;
   out_8689018089367918306[49] = 1;
   out_8689018089367918306[50] = 0;
   out_8689018089367918306[51] = 0;
   out_8689018089367918306[52] = 0;
   out_8689018089367918306[53] = 0;
   out_8689018089367918306[54] = 0;
   out_8689018089367918306[55] = 0;
   out_8689018089367918306[56] = 0;
   out_8689018089367918306[57] = 0;
   out_8689018089367918306[58] = 0;
   out_8689018089367918306[59] = 0;
   out_8689018089367918306[60] = 0;
   out_8689018089367918306[61] = 0;
   out_8689018089367918306[62] = 0;
   out_8689018089367918306[63] = 0;
   out_8689018089367918306[64] = 0;
   out_8689018089367918306[65] = 0;
   out_8689018089367918306[66] = 0;
   out_8689018089367918306[67] = 0;
   out_8689018089367918306[68] = 0;
   out_8689018089367918306[69] = 0;
   out_8689018089367918306[70] = 0;
   out_8689018089367918306[71] = 0;
   out_8689018089367918306[72] = 1;
   out_8689018089367918306[73] = 0;
   out_8689018089367918306[74] = 0;
   out_8689018089367918306[75] = 0;
   out_8689018089367918306[76] = 0;
   out_8689018089367918306[77] = 0;
   out_8689018089367918306[78] = 0;
   out_8689018089367918306[79] = 0;
   out_8689018089367918306[80] = 0;
   out_8689018089367918306[81] = 0;
   out_8689018089367918306[82] = 0;
   out_8689018089367918306[83] = 0;
   out_8689018089367918306[84] = 0;
   out_8689018089367918306[85] = 0;
   out_8689018089367918306[86] = 0;
   out_8689018089367918306[87] = 0;
}
void h_13(double *state, double *unused, double *out_6753228495098360460) {
   out_6753228495098360460[0] = (-2*state[3]*state[5] + 2*state[4]*state[6])*state[9] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[8] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[7];
   out_6753228495098360460[1] = (2*state[3]*state[4] + 2*state[5]*state[6])*state[9] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[7] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[8];
   out_6753228495098360460[2] = (-2*state[3]*state[4] + 2*state[5]*state[6])*state[8] + (2*state[3]*state[5] + 2*state[4]*state[6])*state[7] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[9];
}
void H_13(double *state, double *unused, double *out_3939471430803101762) {
   out_3939471430803101762[0] = 0;
   out_3939471430803101762[1] = 0;
   out_3939471430803101762[2] = 0;
   out_3939471430803101762[3] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_3939471430803101762[4] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_3939471430803101762[5] = -2*state[3]*state[9] + 2*state[4]*state[8] - 2*state[5]*state[7];
   out_3939471430803101762[6] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_3939471430803101762[7] = pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2);
   out_3939471430803101762[8] = 2*state[3]*state[6] + 2*state[4]*state[5];
   out_3939471430803101762[9] = -2*state[3]*state[5] + 2*state[4]*state[6];
   out_3939471430803101762[10] = 0;
   out_3939471430803101762[11] = 0;
   out_3939471430803101762[12] = 0;
   out_3939471430803101762[13] = 0;
   out_3939471430803101762[14] = 0;
   out_3939471430803101762[15] = 0;
   out_3939471430803101762[16] = 0;
   out_3939471430803101762[17] = 0;
   out_3939471430803101762[18] = 0;
   out_3939471430803101762[19] = 0;
   out_3939471430803101762[20] = 0;
   out_3939471430803101762[21] = 0;
   out_3939471430803101762[22] = 0;
   out_3939471430803101762[23] = 0;
   out_3939471430803101762[24] = 0;
   out_3939471430803101762[25] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_3939471430803101762[26] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_3939471430803101762[27] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_3939471430803101762[28] = -2*state[3]*state[7] + 2*state[5]*state[9] - 2*state[6]*state[8];
   out_3939471430803101762[29] = -2*state[3]*state[6] + 2*state[4]*state[5];
   out_3939471430803101762[30] = pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2);
   out_3939471430803101762[31] = 2*state[3]*state[4] + 2*state[5]*state[6];
   out_3939471430803101762[32] = 0;
   out_3939471430803101762[33] = 0;
   out_3939471430803101762[34] = 0;
   out_3939471430803101762[35] = 0;
   out_3939471430803101762[36] = 0;
   out_3939471430803101762[37] = 0;
   out_3939471430803101762[38] = 0;
   out_3939471430803101762[39] = 0;
   out_3939471430803101762[40] = 0;
   out_3939471430803101762[41] = 0;
   out_3939471430803101762[42] = 0;
   out_3939471430803101762[43] = 0;
   out_3939471430803101762[44] = 0;
   out_3939471430803101762[45] = 0;
   out_3939471430803101762[46] = 0;
   out_3939471430803101762[47] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_3939471430803101762[48] = -2*state[3]*state[8] - 2*state[4]*state[9] + 2*state[6]*state[7];
   out_3939471430803101762[49] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_3939471430803101762[50] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_3939471430803101762[51] = 2*state[3]*state[5] + 2*state[4]*state[6];
   out_3939471430803101762[52] = -2*state[3]*state[4] + 2*state[5]*state[6];
   out_3939471430803101762[53] = pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2);
   out_3939471430803101762[54] = 0;
   out_3939471430803101762[55] = 0;
   out_3939471430803101762[56] = 0;
   out_3939471430803101762[57] = 0;
   out_3939471430803101762[58] = 0;
   out_3939471430803101762[59] = 0;
   out_3939471430803101762[60] = 0;
   out_3939471430803101762[61] = 0;
   out_3939471430803101762[62] = 0;
   out_3939471430803101762[63] = 0;
   out_3939471430803101762[64] = 0;
   out_3939471430803101762[65] = 0;
}
void h_14(double *state, double *unused, double *out_3325647758290317255) {
   out_3325647758290317255[0] = state[10];
   out_3325647758290317255[1] = state[11];
   out_3325647758290317255[2] = state[12];
}
void H_14(double *state, double *unused, double *out_9148760694308364807) {
   out_9148760694308364807[0] = 0;
   out_9148760694308364807[1] = 0;
   out_9148760694308364807[2] = 0;
   out_9148760694308364807[3] = 0;
   out_9148760694308364807[4] = 0;
   out_9148760694308364807[5] = 0;
   out_9148760694308364807[6] = 0;
   out_9148760694308364807[7] = 0;
   out_9148760694308364807[8] = 0;
   out_9148760694308364807[9] = 0;
   out_9148760694308364807[10] = 1;
   out_9148760694308364807[11] = 0;
   out_9148760694308364807[12] = 0;
   out_9148760694308364807[13] = 0;
   out_9148760694308364807[14] = 0;
   out_9148760694308364807[15] = 0;
   out_9148760694308364807[16] = 0;
   out_9148760694308364807[17] = 0;
   out_9148760694308364807[18] = 0;
   out_9148760694308364807[19] = 0;
   out_9148760694308364807[20] = 0;
   out_9148760694308364807[21] = 0;
   out_9148760694308364807[22] = 0;
   out_9148760694308364807[23] = 0;
   out_9148760694308364807[24] = 0;
   out_9148760694308364807[25] = 0;
   out_9148760694308364807[26] = 0;
   out_9148760694308364807[27] = 0;
   out_9148760694308364807[28] = 0;
   out_9148760694308364807[29] = 0;
   out_9148760694308364807[30] = 0;
   out_9148760694308364807[31] = 0;
   out_9148760694308364807[32] = 0;
   out_9148760694308364807[33] = 1;
   out_9148760694308364807[34] = 0;
   out_9148760694308364807[35] = 0;
   out_9148760694308364807[36] = 0;
   out_9148760694308364807[37] = 0;
   out_9148760694308364807[38] = 0;
   out_9148760694308364807[39] = 0;
   out_9148760694308364807[40] = 0;
   out_9148760694308364807[41] = 0;
   out_9148760694308364807[42] = 0;
   out_9148760694308364807[43] = 0;
   out_9148760694308364807[44] = 0;
   out_9148760694308364807[45] = 0;
   out_9148760694308364807[46] = 0;
   out_9148760694308364807[47] = 0;
   out_9148760694308364807[48] = 0;
   out_9148760694308364807[49] = 0;
   out_9148760694308364807[50] = 0;
   out_9148760694308364807[51] = 0;
   out_9148760694308364807[52] = 0;
   out_9148760694308364807[53] = 0;
   out_9148760694308364807[54] = 0;
   out_9148760694308364807[55] = 0;
   out_9148760694308364807[56] = 1;
   out_9148760694308364807[57] = 0;
   out_9148760694308364807[58] = 0;
   out_9148760694308364807[59] = 0;
   out_9148760694308364807[60] = 0;
   out_9148760694308364807[61] = 0;
   out_9148760694308364807[62] = 0;
   out_9148760694308364807[63] = 0;
   out_9148760694308364807[64] = 0;
   out_9148760694308364807[65] = 0;
}
void h_33(double *state, double *unused, double *out_6932657845551980812) {
   out_6932657845551980812[0] = state[16];
   out_6932657845551980812[1] = state[17];
   out_6932657845551980812[2] = state[18];
}
void H_33(double *state, double *unused, double *out_1376403418965055654) {
   out_1376403418965055654[0] = 0;
   out_1376403418965055654[1] = 0;
   out_1376403418965055654[2] = 0;
   out_1376403418965055654[3] = 0;
   out_1376403418965055654[4] = 0;
   out_1376403418965055654[5] = 0;
   out_1376403418965055654[6] = 0;
   out_1376403418965055654[7] = 0;
   out_1376403418965055654[8] = 0;
   out_1376403418965055654[9] = 0;
   out_1376403418965055654[10] = 0;
   out_1376403418965055654[11] = 0;
   out_1376403418965055654[12] = 0;
   out_1376403418965055654[13] = 0;
   out_1376403418965055654[14] = 0;
   out_1376403418965055654[15] = 0;
   out_1376403418965055654[16] = 1;
   out_1376403418965055654[17] = 0;
   out_1376403418965055654[18] = 0;
   out_1376403418965055654[19] = 0;
   out_1376403418965055654[20] = 0;
   out_1376403418965055654[21] = 0;
   out_1376403418965055654[22] = 0;
   out_1376403418965055654[23] = 0;
   out_1376403418965055654[24] = 0;
   out_1376403418965055654[25] = 0;
   out_1376403418965055654[26] = 0;
   out_1376403418965055654[27] = 0;
   out_1376403418965055654[28] = 0;
   out_1376403418965055654[29] = 0;
   out_1376403418965055654[30] = 0;
   out_1376403418965055654[31] = 0;
   out_1376403418965055654[32] = 0;
   out_1376403418965055654[33] = 0;
   out_1376403418965055654[34] = 0;
   out_1376403418965055654[35] = 0;
   out_1376403418965055654[36] = 0;
   out_1376403418965055654[37] = 0;
   out_1376403418965055654[38] = 0;
   out_1376403418965055654[39] = 1;
   out_1376403418965055654[40] = 0;
   out_1376403418965055654[41] = 0;
   out_1376403418965055654[42] = 0;
   out_1376403418965055654[43] = 0;
   out_1376403418965055654[44] = 0;
   out_1376403418965055654[45] = 0;
   out_1376403418965055654[46] = 0;
   out_1376403418965055654[47] = 0;
   out_1376403418965055654[48] = 0;
   out_1376403418965055654[49] = 0;
   out_1376403418965055654[50] = 0;
   out_1376403418965055654[51] = 0;
   out_1376403418965055654[52] = 0;
   out_1376403418965055654[53] = 0;
   out_1376403418965055654[54] = 0;
   out_1376403418965055654[55] = 0;
   out_1376403418965055654[56] = 0;
   out_1376403418965055654[57] = 0;
   out_1376403418965055654[58] = 0;
   out_1376403418965055654[59] = 0;
   out_1376403418965055654[60] = 0;
   out_1376403418965055654[61] = 0;
   out_1376403418965055654[62] = 1;
   out_1376403418965055654[63] = 0;
   out_1376403418965055654[64] = 0;
   out_1376403418965055654[65] = 0;
}
#include <eigen3/Eigen/Dense>
#include <iostream>

typedef Eigen::Matrix<double, DIM, DIM, Eigen::RowMajor> DDM;
typedef Eigen::Matrix<double, EDIM, EDIM, Eigen::RowMajor> EEM;
typedef Eigen::Matrix<double, DIM, EDIM, Eigen::RowMajor> DEM;

void predict(double *in_x, double *in_P, double *in_Q, double dt) {
  typedef Eigen::Matrix<double, MEDIM, MEDIM, Eigen::RowMajor> RRM;

  double nx[DIM] = {0};
  double in_F[EDIM*EDIM] = {0};

  // functions from sympy
  f_fun(in_x, dt, nx);
  F_fun(in_x, dt, in_F);


  EEM F(in_F);
  EEM P(in_P);
  EEM Q(in_Q);

  RRM F_main = F.topLeftCorner(MEDIM, MEDIM);
  P.topLeftCorner(MEDIM, MEDIM) = (F_main * P.topLeftCorner(MEDIM, MEDIM)) * F_main.transpose();
  P.topRightCorner(MEDIM, EDIM - MEDIM) = F_main * P.topRightCorner(MEDIM, EDIM - MEDIM);
  P.bottomLeftCorner(EDIM - MEDIM, MEDIM) = P.bottomLeftCorner(EDIM - MEDIM, MEDIM) * F_main.transpose();

  P = P + dt*Q;

  // copy out state
  memcpy(in_x, nx, DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
}

// note: extra_args dim only correct when null space projecting
// otherwise 1
template <int ZDIM, int EADIM, bool MAHA_TEST>
void update(double *in_x, double *in_P, Hfun h_fun, Hfun H_fun, Hfun Hea_fun, double *in_z, double *in_R, double *in_ea, double MAHA_THRESHOLD) {
  typedef Eigen::Matrix<double, ZDIM, ZDIM, Eigen::RowMajor> ZZM;
  typedef Eigen::Matrix<double, ZDIM, DIM, Eigen::RowMajor> ZDM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, EDIM, Eigen::RowMajor> XEM;
  //typedef Eigen::Matrix<double, EDIM, ZDIM, Eigen::RowMajor> EZM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, 1> X1M;
  typedef Eigen::Matrix<double, Eigen::Dynamic, Eigen::Dynamic, Eigen::RowMajor> XXM;

  double in_hx[ZDIM] = {0};
  double in_H[ZDIM * DIM] = {0};
  double in_H_mod[EDIM * DIM] = {0};
  double delta_x[EDIM] = {0};
  double x_new[DIM] = {0};


  // state x, P
  Eigen::Matrix<double, ZDIM, 1> z(in_z);
  EEM P(in_P);
  ZZM pre_R(in_R);

  // functions from sympy
  h_fun(in_x, in_ea, in_hx);
  H_fun(in_x, in_ea, in_H);
  ZDM pre_H(in_H);

  // get y (y = z - hx)
  Eigen::Matrix<double, ZDIM, 1> pre_y(in_hx); pre_y = z - pre_y;
  X1M y; XXM H; XXM R;
  if (Hea_fun){
    typedef Eigen::Matrix<double, ZDIM, EADIM, Eigen::RowMajor> ZAM;
    double in_Hea[ZDIM * EADIM] = {0};
    Hea_fun(in_x, in_ea, in_Hea);
    ZAM Hea(in_Hea);
    XXM A = Hea.transpose().fullPivLu().kernel();


    y = A.transpose() * pre_y;
    H = A.transpose() * pre_H;
    R = A.transpose() * pre_R * A;
  } else {
    y = pre_y;
    H = pre_H;
    R = pre_R;
  }
  // get modified H
  H_mod_fun(in_x, in_H_mod);
  DEM H_mod(in_H_mod);
  XEM H_err = H * H_mod;

  // Do mahalobis distance test
  if (MAHA_TEST){
    XXM a = (H_err * P * H_err.transpose() + R).inverse();
    double maha_dist = y.transpose() * a * y;
    if (maha_dist > MAHA_THRESHOLD){
      R = 1.0e16 * R;
    }
  }

  // Outlier resilient weighting
  double weight = 1;//(1.5)/(1 + y.squaredNorm()/R.sum());

  // kalman gains and I_KH
  XXM S = ((H_err * P) * H_err.transpose()) + R/weight;
  XEM KT = S.fullPivLu().solve(H_err * P.transpose());
  //EZM K = KT.transpose(); TODO: WHY DOES THIS NOT COMPILE?
  //EZM K = S.fullPivLu().solve(H_err * P.transpose()).transpose();
  //std::cout << "Here is the matrix rot:\n" << K << std::endl;
  EEM I_KH = Eigen::Matrix<double, EDIM, EDIM>::Identity() - (KT.transpose() * H_err);

  // update state by injecting dx
  Eigen::Matrix<double, EDIM, 1> dx(delta_x);
  dx  = (KT.transpose() * y);
  memcpy(delta_x, dx.data(), EDIM * sizeof(double));
  err_fun(in_x, delta_x, x_new);
  Eigen::Matrix<double, DIM, 1> x(x_new);

  // update cov
  P = ((I_KH * P) * I_KH.transpose()) + ((KT.transpose() * R) * KT);

  // copy out state
  memcpy(in_x, x.data(), DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
  memcpy(in_z, y.data(), y.rows() * sizeof(double));
}




}
extern "C" {

void live_update_4(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_4, H_4, NULL, in_z, in_R, in_ea, MAHA_THRESH_4);
}
void live_update_9(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_9, H_9, NULL, in_z, in_R, in_ea, MAHA_THRESH_9);
}
void live_update_10(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_10, H_10, NULL, in_z, in_R, in_ea, MAHA_THRESH_10);
}
void live_update_12(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_12, H_12, NULL, in_z, in_R, in_ea, MAHA_THRESH_12);
}
void live_update_31(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_31, H_31, NULL, in_z, in_R, in_ea, MAHA_THRESH_31);
}
void live_update_32(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<4, 3, 0>(in_x, in_P, h_32, H_32, NULL, in_z, in_R, in_ea, MAHA_THRESH_32);
}
void live_update_13(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_13, H_13, NULL, in_z, in_R, in_ea, MAHA_THRESH_13);
}
void live_update_14(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_14, H_14, NULL, in_z, in_R, in_ea, MAHA_THRESH_14);
}
void live_update_33(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_33, H_33, NULL, in_z, in_R, in_ea, MAHA_THRESH_33);
}
void live_H(double *in_vec, double *out_7296470732038239115) {
  H(in_vec, out_7296470732038239115);
}
void live_err_fun(double *nom_x, double *delta_x, double *out_195928949731378623) {
  err_fun(nom_x, delta_x, out_195928949731378623);
}
void live_inv_err_fun(double *nom_x, double *true_x, double *out_8048527368191010135) {
  inv_err_fun(nom_x, true_x, out_8048527368191010135);
}
void live_H_mod_fun(double *state, double *out_7785589846533456051) {
  H_mod_fun(state, out_7785589846533456051);
}
void live_f_fun(double *state, double dt, double *out_6180571892829147108) {
  f_fun(state,  dt, out_6180571892829147108);
}
void live_F_fun(double *state, double dt, double *out_7713953993130752993) {
  F_fun(state,  dt, out_7713953993130752993);
}
void live_h_4(double *state, double *unused, double *out_9147143317146732236) {
  h_4(state, unused, out_9147143317146732236);
}
void live_H_4(double *state, double *unused, double *out_5140815643046409326) {
  H_4(state, unused, out_5140815643046409326);
}
void live_h_9(double *state, double *unused, double *out_3325647758290317255) {
  h_9(state, unused, out_3325647758290317255);
}
void live_H_9(double *state, double *unused, double *out_9148760694308364807) {
  H_9(state, unused, out_9148760694308364807);
}
void live_h_10(double *state, double *unused, double *out_7331233491917205272) {
  h_10(state, unused, out_7331233491917205272);
}
void live_H_10(double *state, double *unused, double *out_451170121987628608) {
  H_10(state, unused, out_451170121987628608);
}
void live_h_12(double *state, double *unused, double *out_3549419012567469284) {
  h_12(state, unused, out_3549419012567469284);
}
void live_H_12(double *state, double *unused, double *out_4519716617998815659) {
  H_12(state, unused, out_4519716617998815659);
}
void live_h_31(double *state, double *unused, double *out_7170478479227021472) {
  h_31(state, unused, out_7170478479227021472);
}
void live_H_31(double *state, double *unused, double *out_1774153585673801950) {
  H_31(state, unused, out_1774153585673801950);
}
void live_h_32(double *state, double *unused, double *out_2516646216923074189) {
  h_32(state, unused, out_2516646216923074189);
}
void live_H_32(double *state, double *unused, double *out_8689018089367918306) {
  H_32(state, unused, out_8689018089367918306);
}
void live_h_13(double *state, double *unused, double *out_6753228495098360460) {
  h_13(state, unused, out_6753228495098360460);
}
void live_H_13(double *state, double *unused, double *out_3939471430803101762) {
  H_13(state, unused, out_3939471430803101762);
}
void live_h_14(double *state, double *unused, double *out_3325647758290317255) {
  h_14(state, unused, out_3325647758290317255);
}
void live_H_14(double *state, double *unused, double *out_9148760694308364807) {
  H_14(state, unused, out_9148760694308364807);
}
void live_h_33(double *state, double *unused, double *out_6932657845551980812) {
  h_33(state, unused, out_6932657845551980812);
}
void live_H_33(double *state, double *unused, double *out_1376403418965055654) {
  H_33(state, unused, out_1376403418965055654);
}
void live_predict(double *in_x, double *in_P, double *in_Q, double dt) {
  predict(in_x, in_P, in_Q, dt);
}
}

const EKF live = {
  .name = "live",
  .kinds = { 4, 9, 10, 12, 31, 32, 13, 14, 33 },
  .feature_kinds = {  },
  .f_fun = live_f_fun,
  .F_fun = live_F_fun,
  .err_fun = live_err_fun,
  .inv_err_fun = live_inv_err_fun,
  .H_mod_fun = live_H_mod_fun,
  .predict = live_predict,
  .hs = {
    { 4, live_h_4 },
    { 9, live_h_9 },
    { 10, live_h_10 },
    { 12, live_h_12 },
    { 31, live_h_31 },
    { 32, live_h_32 },
    { 13, live_h_13 },
    { 14, live_h_14 },
    { 33, live_h_33 },
  },
  .Hs = {
    { 4, live_H_4 },
    { 9, live_H_9 },
    { 10, live_H_10 },
    { 12, live_H_12 },
    { 31, live_H_31 },
    { 32, live_H_32 },
    { 13, live_H_13 },
    { 14, live_H_14 },
    { 33, live_H_33 },
  },
  .updates = {
    { 4, live_update_4 },
    { 9, live_update_9 },
    { 10, live_update_10 },
    { 12, live_update_12 },
    { 31, live_update_31 },
    { 32, live_update_32 },
    { 13, live_update_13 },
    { 14, live_update_14 },
    { 33, live_update_33 },
  },
  .Hes = {
  },
  .sets = {
  },
  .extra_routines = {
    { "H", live_H },
  },
};

ekf_init(live);
